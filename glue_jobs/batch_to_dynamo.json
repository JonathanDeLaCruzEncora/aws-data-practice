{
	"jobConfig": {
		"name": "batch_to_dynamo",
		"description": "",
		"role": "arn:aws:iam::864899848215:role/service-role/AWSGlueServiceRole-1",
		"command": "glueetl",
		"version": "5.0",
		"runtime": null,
		"workerType": "G.1X",
		"numberOfWorkers": 2,
		"maxCapacity": 2,
		"jobRunQueuingEnabled": false,
		"maxRetries": 0,
		"timeout": 480,
		"maxConcurrentRuns": 1,
		"security": "none",
		"scriptName": "batch_to_dynamo.py",
		"scriptLocation": "s3://aws-glue-assets-864899848215-us-east-1/scripts/",
		"language": "python-3",
		"spark": true,
		"sparkConfiguration": "standard",
		"jobParameters": [],
		"tags": [],
		"jobMode": "DEVELOPER_MODE",
		"createdOn": "2025-03-05T02:23:14.081Z",
		"developerMode": true,
		"connectionsList": [],
		"temporaryDirectory": "s3://aws-glue-assets-864899848215-us-east-1/temporary/",
		"logging": true,
		"glueHiveMetastore": true,
		"etlAutoTuning": true,
		"metrics": true,
		"observabilityMetrics": true,
		"bookmark": "job-bookmark-disable",
		"sparkPath": "s3://aws-glue-assets-864899848215-us-east-1/sparkHistoryLogs/",
		"flexExecution": false,
		"minFlexWorkers": null,
		"maintenanceWindow": null
	},
	"hasBeenSaved": false,
	"usageProfileName": null,
	"script": "import sys\nfrom awsglue.transforms import *\nfrom awsglue.utils import getResolvedOptions\nfrom pyspark.context import SparkContext\nfrom awsglue.context import GlueContext\nfrom awsglue.dynamicframe import DynamicFrame\nfrom awsglue.job import Job\n\n## @params: [JOB_NAME]\nargs = getResolvedOptions(sys.argv, ['JOB_NAME'])\n\nsc = SparkContext()\nglueContext = GlueContext(sc)\nspark = glueContext.spark_session\njob = Job(glueContext)\njob.init(args['JOB_NAME'], args)\n\ns3_path = \"s3://myawsbucket-dataproject/processedData/posts_processed/\"\ndf = spark.read.parquet(s3_path) \n\n# Convert DataFrame to DynamicFrame\ndyf = DynamicFrame.fromDF(df, glueContext, \"dyf\")\n\n# Write data to DynamoDB\nglueContext.write_dynamic_frame.from_options(\n    frame=dyf,\n    connection_type=\"dynamodb\",\n    connection_options={\"dynamodb.output.tableName\": \"ProcessedData\"},\n)\njob.commit()"
}